<template>
  <view class="quark-webview">
    <wil-navbar class="wil-navbar" title="夸克网盘" @handleConfirm="handleConfirm"></wil-navbar>
    <wil-webview type="web" :src="url" style="width: 750rpx;flex: 1;" @getcookies="getCookies" class="wil-webview" />
  </view>
</template>

<script>
import wilNavbar from "@/components/mobile/wil-navbar/navbar.nvue";
import { getQuarkFolder, getQuarkUser } from "@/utils/common";
import { addOperLog } from "@/network/apis";

export default {
  components: {
    wilNavbar,
  },
  data() {
    return {
      url: "",
      sum: 0,
      debounceCookie: null,
      timeout: null,
      sourceList: [],
      quarkCookie: "",
      routerParams: {},
      oldName: ''
    };
  },
  methods: {
    editMulu(newName) {
      const muluData = uni.getStorageSync('muluData')
      let muluMovie = muluData.movie?.find(v => v.name == this.oldName)
      let muluTv = muluData.tv?.find(v => v.name == this.oldName)
      if (muluMovie) {
        muluMovie.name = newName
      }
      if (muluTv) {
        muluTv.name = newName
      }
      uni.setStorageSync('muluData', muluData)
    },
    getCookies(event) {
      this.quarkCookie = event.detail.cookies;
      this.sourceList = uni.getStorageSync("sourceList");
    },
    async handleConfirm() {
      let cloudQuark = this.sourceList.find((item) => {
        return item.type == "夸克网盘";
      });
      if (!this.quarkCookie) {
        uni.showToast({
          title: "权限校验失败，请稍后再试",
          icon: "none",
        });
        return;
      }
      let res = await getQuarkFolder(
        {
          fid: "0",
        },
        {
          Cookie: this.quarkCookie,
        }
      );

      if (res.status == 200) {
        let res1 = await getQuarkUser({
          Cookie: this.quarkCookie,
        });
        if (cloudQuark.list.length) {
          this.oldName = cloudQuark.list[0].name
          if (cloudQuark.list[0].name != res1.data.nickname) {
            let historyArr = uni.getStorageSync("historyPlay") || [];
            historyArr = historyArr.filter((v) => v.sourceType != "夸克网盘" || v.sourceName != cloudQuark.list[0].name);
            uni.setStorageSync("historyPlay", historyArr);
            this.editMulu(res1.data.nickname) //修改电视剧电影目录
          }
          cloudQuark.list[0].name = res1.data.nickname;
          cloudQuark.list[0].Cookie = this.quarkCookie;
          uni.setStorageSync("sourceList", this.sourceList);
          uni.showToast({
            title: "修改成功",
            icon: "none",
          });
          const pages = getCurrentPages();
          // 上一级页面实例（pages[pages.length - 2]）
          const prevPage = pages[pages.length - 2];
          // 直接获取上一级页面的数据或调用方法
          if (prevPage.route == "pages/mobile/source/source-list") {
            if (this.routerParams.isActive == "1") {
              uni.setStorageSync("isreload", true);
            } else if (this.routerParams.isActive == "0") {
              setTimeout(() => {
                uni.navigateBack({
                  delta: 1,
                });
                uni.redirectTo({
                  url: '/pages/mobile/media/catelog-setting'
                })
              }, 1500);
              return;
            }
          }
        } else {
          let obj = {
            name: res1.data.nickname,
            Cookie: this.quarkCookie,
          };
          let isHaveData = !this.sourceList.every((item) => {
            return !item.list.length;
          });
          if (!isHaveData) {
            obj.active = true;
            uni.setStorageSync("isreload", true);
          }
          cloudQuark.list.push(obj);
          uni.setStorageSync("sourceList", this.sourceList);
          uni.showToast({
            title: "添加成功",
            icon: "none",
          });
          setTimeout(() => {
            uni.navigateTo({
              url: '/pages/mobile/media/catelog-setting'
            })
          }, 1800);
          addOperLog({ title: "登录夸克网盘", businessType: 12, operatorType: 2, operUrl: "" });
        }
        setTimeout(() => {
          uni.navigateBack({
            delta: 2,
          });
        }, 1500);
      } else {
        uni.showToast({
          title: "权限校验失败，请稍后再试",
          icon: "none",
        });
        return;
      }
    },
  },
  onLoad(options) {
    this.routerParams = options;
    this.url = decodeURIComponent(options.url);
  },
};
</script>

<style lang="scss">
.quark-webview {
  width: 750rpx;
  flex: 1;
  display: flex;
  flex-direction: column;

  .wil-webview {
    flex: 1;
  }
}
</style>