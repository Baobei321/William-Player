<template>
  <view class="video-player">
    <video :src="config.url" :autoplay="config.autoplay" :poster="config.poster" :loop="config.loop" :initial-time="config.initialTime" :is-live="config.isLive" :muted="config.muted"
      :codec="config.codec" style="height: 313px;width: 100%;" @timeupdate="setHistory">
    </video>
  </view>
</template>

<script>
export default {
  data () {
    return {
      webdavInfo: {},
      historyPlay: [],
      historyObj: { initialTime: '0' },
      sum: 0,
      routerParams: {},
      config:{
          url: "",
          // 是否自动播放
          autoplay:true,
          //播放器预览背景图片，支持网络地址
          poster: "",
          //是否循环播放
          loop: false,
          //开始播放位置，单位：毫秒
          initialTime: 0,
          //是否是直播
          isLive: false,
          //是否静音播放
          muted: false,
          codec:"hardware"
      },
    }
  },

  methods: {
    getVideoUrl () {
      this.webdavInfo = uni.getStorageSync('webdavInfo')
      return new Promise(resolve => {
        uni.request({
          url: 'http://' + this.webdavInfo.address + ':' + this.webdavInfo.port + '/api/fs/get',
          data: JSON.stringify({ path: '/' + this.routerParams.path, password: '' }),
          timeout: 5000,
          method: 'POST',
          header: { Authorization: this.webdavInfo.token, 'Content-Type': 'application/json' },
          success: (res) => {
            resolve(res.data)
          }
        })
      });
    },
    //裁剪格式获取电影名
    getMovieName (val) {
      const lastDotIndex = val.lastIndexOf('.');
      let name = lastDotIndex === -1 ? val : val.substring(0, lastDotIndex);
      return name
    },
    setHistory (event) {
      this.sum += 1
      if (this.sum == 8) {
        this.sum = 0
        this.historyObj.initialTime = String(Math.round(event.detail.currentTime))
        let index = null
        if (this.routerParams.type == 'tv') {
          index = this.historyPlay.findIndex(i => i.type == this.routerParams.type && i.titlePlay == this.historyObj.titlePlay)
        } else if (this.routerParams.type == 'movie') {
          index = this.historyPlay.findIndex(i => i.type == this.routerParams.type && getMovieName(i.name) == getMovieName(this.historyObj.name))
        }
        if (index > -1) {
          this.historyPlay.splice(index, 1)
          this.historyPlay.unshift(this.historyObj)
        } else {
          this.historyPlay.unshift(this.historyObj)
        }
        uni.setStorageSync('historyPlay', this.historyPlay)
      }
    },
    //初始化进入的时候，设置从哪儿开始播放
    setInitialTime () {
      const lastIndex = this.routerParams.path.lastIndexOf('/')
      let obj = {}
      if (this.routerParams.type == 'movie') {
        let name = this.routerParams.path.substring(lastIndex + 1)
        obj = this.historyPlay?.find(i => i.name == name)
      } else if (this.routerParams.type == 'tv') {
        let name = this.routerParams.path.substring(lastIndex + 1)
        const secondLastSlashIndex = this.routerParams.path.lastIndexOf('/', lastIndex - 1);
        let titlePlay = this.routerParams.path.substring(secondLastSlashIndex + 1, lastIndex)
        obj = this.historyPlay?.find(i => i.name == name && i.titlePlay == titlePlay)
      }
      if (this.routerParams.item) {
        this.historyObj = JSON.parse(this.routerParams.item)
        this.config.poster = this.historyObj.poster
      } else {
        this.historyObj = obj
        this.config.poster = this.historyObj.poster
      }
    },
    navToNvue () {
      uni.navigateTo({
        url: 'new-nvue-page-2'
      })
    },
    navToVue () {
      uni.navigateTo({
        url: 'new-vue-page-2'
      })
    }
  },
  async onLoad (options) {
    this.routerParams = options
    this.setInitialTime()
    let res = await this.getVideoUrl()
    this.config.url = res.data.raw_url
  }
}
</script>

<style lang="scss">
</style>
